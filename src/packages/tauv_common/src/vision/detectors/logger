#!/usr/bin/env python3

import rospy
from tauv_msgs.msg import RegisterObjectDetections, BucketDetection
from geometry_msgs.msg import Point

class Logger():
    def __init__(self):
        rospy.init_node('logger', anonymous = True)
        rospy.Subscriber("/register_object_detection", RegisterObjectDetections,
                                                self.callback)

        self.pub = rospy.Publisher("/register_object_detection", RegisterObjectDetections,
                                                queue_size=10)
        
        rospy.Timer(rospy.Duration(1), self.publish1)
        rospy.Timer(rospy.Duration(5), self.publish2)
        rospy.Timer(rospy.Duration(2), self.publish3)
        rospy.Timer(rospy.Duration(1.5), self.publish4)
        rospy.Timer(rospy.Duration(3), self.publish5)
        rospy.Timer(rospy.Duration(50), self.publish6)

        self.publish6(rospy.Time())

    def callback(self, data):
        print(data)

    def publish1(self, time):
        obj = RegisterObjectDetections()
        det1 = BucketDetection()
        det1.position = Point(1,1,1)
        det1.tag = "test"

        obj.objdets = [det1]
        obj.detector_tag = "camera"

        self.pub.publish(obj)

    def publish2(self, time):
        det2 = BucketDetection()
        det2.position = Point(2,2,2)
        det2.tag = "test"

        obj = RegisterObjectDetections()
        det1 = BucketDetection()
        det1.position = Point(1,1,1)
        det1.tag = "test1"

        obj.objdets = [det1, det2]
        obj.detector_tag = "camera"

        self.pub.publish(obj)

    def publish3(self, time):
        det2 = BucketDetection()
        det2.position = Point(1.5,1.07,0.99)
        det2.tag = "test1"

        obj = RegisterObjectDetections()
        det1 = BucketDetection()
        det1.position = Point(1.01,0.99,1.05)
        det1.tag = "test"

        obj.objdets = [det1, det2]
        obj.detector_tag = "camera"

        self.pub.publish(obj)
        
    def publish4(self, time):
        det2 = BucketDetection()
        det2.position = Point(10.7,11.7,9.99)
        det2.tag = "test1"

        obj = RegisterObjectDetections()

        obj.objdets = [det2]
        obj.detector_tag = "camera"

        self.pub.publish(obj)

    def publish5(self, time):
        det2 = BucketDetection()
        det2.position = Point(14.7,12.7,11.99)
        det2.tag = "test1"

        obj = RegisterObjectDetections()

        obj.objdets = [det2]
        obj.detector_tag = "camera"

        self.pub.publish(obj)

    def publish6(self, time):
        det2 = BucketDetection()
        det2.position = Point(141.7,122.7,131.99)
        det2.tag = "test1"

        obj = RegisterObjectDetections()

        obj.objdets = [det2]
        obj.detector_tag = "camera"

        self.pub.publish(obj)

s = Logger()
rospy.spin()